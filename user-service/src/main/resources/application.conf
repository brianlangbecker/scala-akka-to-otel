kamon {
  environment {
    service = "user"
  }

  trace {
    sampler = "always"
  }

  instrumentation {
    akka.enabled = true
    akka-http.enabled = true
  }

  otel {
    trace {
      enabled = true
      endpoint = "http://otel-collector:4317"
      protocol = "grpc"
    }
  }

  instrumentation {
    akka {
      filters {
        actors {
          track {
            includes = ["user-system/**"]
          }
        }
      }
    }

    akka-http {
      server {
        propagation {
          enabled = yes
          channel = default
        }
        tracing {
          enabled = yes
          span-metrics = on
        }
      }
      client {
        propagation {
          enabled = yes
          channel = default
        }
        tracing {
          enabled = yes
          span-metrics = on
        }
        exclude-urls = [
          ".*otel-collector.*",
          ".*opentelemetry.*",
          ".*TraceService.*"
        ]
      }
    }
  }

  metric {
    tick-interval = 10 seconds
  }
}

akka {
  loglevel = "INFO"
  stdout-loglevel = "INFO"

  actor {
    serialization-bindings {
      "com.example.UserActor$UserEvent" = jackson-json
    }
  }

  persistence {
    journal.plugin = "akka.persistence.journal.leveldb"
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"

    journal.leveldb.dir = "target/journal"
    snapshot-store.local.dir = "target/snapshots"

    # DO NOT USE THIS IN PRODUCTION!
    journal.leveldb.native = false
  }

  http {
    server {
      idle-timeout = 60 s
      request-timeout = 20 s
    }
  }
}